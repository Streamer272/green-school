rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin(request) {
      return exists(/databases/$(database)/documents/accounts/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/accounts/$(request.auth.uid)).data.admin;
    }

    match /{document=**} {
      allow read, write: if false;
    }

    match /themes/{docId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin(request);
    }

    match /projects/{docId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin(request);
    }

    match /posts/{docId} {
      allow read: if request.resource.data.status != "private" || (request.auth != null && isAdmin(request));
      allow write: if request.auth != null && isAdmin(request);
    }

    match /meetings/{docId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin(request);
    }

    match /accounts/{docId} {
      allow read: if request.auth != null && request.auth.uid == docId;
    }
  }
}
